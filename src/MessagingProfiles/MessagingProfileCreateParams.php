<?php

declare(strict_types=1);

namespace Telnyx\MessagingProfiles;

use Telnyx\Core\Attributes\Api;
use Telnyx\Core\Concerns\SdkModel;
use Telnyx\Core\Concerns\SdkParams;
use Telnyx\Core\Contracts\BaseModel;
use Telnyx\MessagingProfiles\MessagingProfileCreateParams\WebhookAPIVersion;

/**
 * An object containing the method's parameters.
 * Example usage:
 * ```
 * $params = (new MessagingProfileCreateParams); // set properties as needed
 * $client->messagingProfiles->create(...$params->toArray());
 * ```
 * Create a messaging profile.
 *
 * @method toArray()
 *   Returns the parameters as an associative array suitable for passing to the client method.
 *
 *   `$client->messagingProfiles->create(...$params->toArray());`
 *
 * @see Telnyx\MessagingProfiles->create
 *
 * @phpstan-type messaging_profile_create_params = array{
 *   name: string,
 *   whitelistedDestinations: list<string>,
 *   alphaSender?: string|null,
 *   dailySpendLimit?: string,
 *   dailySpendLimitEnabled?: bool,
 *   enabled?: bool,
 *   mmsFallBackToSMS?: bool,
 *   mmsTranscoding?: bool,
 *   numberPoolSettings?: NumberPoolSettings|null,
 *   urlShortenerSettings?: URLShortenerSettings|null,
 *   webhookAPIVersion?: WebhookAPIVersion|value-of<WebhookAPIVersion>,
 *   webhookFailoverURL?: string|null,
 *   webhookURL?: string|null,
 * }
 */
final class MessagingProfileCreateParams implements BaseModel
{
    /** @use SdkModel<messaging_profile_create_params> */
    use SdkModel;
    use SdkParams;

    /**
     * A user friendly name for the messaging profile.
     */
    #[Api]
    public string $name;

    /**
     * Destinations to which the messaging profile is allowed to send. The elements in the list must be valid ISO 3166-1 alpha-2 country codes. If set to `["*"]` all destinations will be allowed.
     *
     * @var list<string> $whitelistedDestinations
     */
    #[Api('whitelisted_destinations', list: 'string')]
    public array $whitelistedDestinations;

    /**
     * The alphanumeric sender ID to use when sending to destinations that require an alphanumeric sender ID.
     */
    #[Api('alpha_sender', nullable: true, optional: true)]
    public ?string $alphaSender;

    /**
     * The maximum amount of money (in USD) that can be spent by this profile before midnight UTC.
     */
    #[Api('daily_spend_limit', optional: true)]
    public ?string $dailySpendLimit;

    /**
     * Whether to enforce the value configured by `daily_spend_limit`.
     */
    #[Api('daily_spend_limit_enabled', optional: true)]
    public ?bool $dailySpendLimitEnabled;

    /**
     * Specifies whether the messaging profile is enabled or not.
     */
    #[Api(optional: true)]
    public ?bool $enabled;

    /**
     * enables SMS fallback for MMS messages.
     */
    #[Api('mms_fall_back_to_sms', optional: true)]
    public ?bool $mmsFallBackToSMS;

    /**
     * enables automated resizing of MMS media.
     */
    #[Api('mms_transcoding', optional: true)]
    public ?bool $mmsTranscoding;

    /**
     * Number Pool allows you to send messages from a pool of numbers of different types, assigning
     * weights to each type. The pool consists of all the long code and toll free numbers
     * assigned to the messaging profile.
     *
     * To disable this feature, set the object field to `null`.
     */
    #[Api('number_pool_settings', nullable: true, optional: true)]
    public ?NumberPoolSettings $numberPoolSettings;

    /**
     * The URL shortener feature allows automatic replacement of URLs that were generated using
     * a public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,
     * is.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with
     * with links generated by Telnyx. The use of custom links can improve branding and message
     * deliverability.
     *
     * To disable this feature, set the object field to `null`.
     */
    #[Api('url_shortener_settings', nullable: true, optional: true)]
    public ?URLShortenerSettings $urlShortenerSettings;

    /**
     * Determines which webhook format will be used, Telnyx API v1, v2, or a legacy 2010-04-01 format.
     *
     * @var value-of<WebhookAPIVersion>|null $webhookAPIVersion
     */
    #[Api('webhook_api_version', enum: WebhookAPIVersion::class, optional: true)]
    public ?string $webhookAPIVersion;

    /**
     * The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.
     */
    #[Api('webhook_failover_url', nullable: true, optional: true)]
    public ?string $webhookFailoverURL;

    /**
     * The URL where webhooks related to this messaging profile will be sent.
     */
    #[Api('webhook_url', nullable: true, optional: true)]
    public ?string $webhookURL;

    /**
     * `new MessagingProfileCreateParams()` is missing required properties by the API.
     *
     * To enforce required parameters use
     * ```
     * MessagingProfileCreateParams::with(name: ..., whitelistedDestinations: ...)
     * ```
     *
     * Otherwise ensure the following setters are called
     *
     * ```
     * (new MessagingProfileCreateParams)
     *   ->withName(...)
     *   ->withWhitelistedDestinations(...)
     * ```
     */
    public function __construct()
    {
        $this->initialize();
    }

    /**
     * Construct an instance from the required parameters.
     *
     * You must use named parameters to construct any parameters with a default value.
     *
     * @param list<string> $whitelistedDestinations
     * @param WebhookAPIVersion|value-of<WebhookAPIVersion> $webhookAPIVersion
     */
    public static function with(
        string $name,
        array $whitelistedDestinations,
        ?string $alphaSender = null,
        ?string $dailySpendLimit = null,
        ?bool $dailySpendLimitEnabled = null,
        ?bool $enabled = null,
        ?bool $mmsFallBackToSMS = null,
        ?bool $mmsTranscoding = null,
        ?NumberPoolSettings $numberPoolSettings = null,
        ?URLShortenerSettings $urlShortenerSettings = null,
        WebhookAPIVersion|string|null $webhookAPIVersion = null,
        ?string $webhookFailoverURL = null,
        ?string $webhookURL = null,
    ): self {
        $obj = new self;

        $obj->name = $name;
        $obj->whitelistedDestinations = $whitelistedDestinations;

        null !== $alphaSender && $obj->alphaSender = $alphaSender;
        null !== $dailySpendLimit && $obj->dailySpendLimit = $dailySpendLimit;
        null !== $dailySpendLimitEnabled && $obj->dailySpendLimitEnabled = $dailySpendLimitEnabled;
        null !== $enabled && $obj->enabled = $enabled;
        null !== $mmsFallBackToSMS && $obj->mmsFallBackToSMS = $mmsFallBackToSMS;
        null !== $mmsTranscoding && $obj->mmsTranscoding = $mmsTranscoding;
        null !== $numberPoolSettings && $obj->numberPoolSettings = $numberPoolSettings;
        null !== $urlShortenerSettings && $obj->urlShortenerSettings = $urlShortenerSettings;
        null !== $webhookAPIVersion && $obj['webhookAPIVersion'] = $webhookAPIVersion;
        null !== $webhookFailoverURL && $obj->webhookFailoverURL = $webhookFailoverURL;
        null !== $webhookURL && $obj->webhookURL = $webhookURL;

        return $obj;
    }

    /**
     * A user friendly name for the messaging profile.
     */
    public function withName(string $name): self
    {
        $obj = clone $this;
        $obj->name = $name;

        return $obj;
    }

    /**
     * Destinations to which the messaging profile is allowed to send. The elements in the list must be valid ISO 3166-1 alpha-2 country codes. If set to `["*"]` all destinations will be allowed.
     *
     * @param list<string> $whitelistedDestinations
     */
    public function withWhitelistedDestinations(
        array $whitelistedDestinations
    ): self {
        $obj = clone $this;
        $obj->whitelistedDestinations = $whitelistedDestinations;

        return $obj;
    }

    /**
     * The alphanumeric sender ID to use when sending to destinations that require an alphanumeric sender ID.
     */
    public function withAlphaSender(?string $alphaSender): self
    {
        $obj = clone $this;
        $obj->alphaSender = $alphaSender;

        return $obj;
    }

    /**
     * The maximum amount of money (in USD) that can be spent by this profile before midnight UTC.
     */
    public function withDailySpendLimit(string $dailySpendLimit): self
    {
        $obj = clone $this;
        $obj->dailySpendLimit = $dailySpendLimit;

        return $obj;
    }

    /**
     * Whether to enforce the value configured by `daily_spend_limit`.
     */
    public function withDailySpendLimitEnabled(
        bool $dailySpendLimitEnabled
    ): self {
        $obj = clone $this;
        $obj->dailySpendLimitEnabled = $dailySpendLimitEnabled;

        return $obj;
    }

    /**
     * Specifies whether the messaging profile is enabled or not.
     */
    public function withEnabled(bool $enabled): self
    {
        $obj = clone $this;
        $obj->enabled = $enabled;

        return $obj;
    }

    /**
     * enables SMS fallback for MMS messages.
     */
    public function withMmsFallBackToSMS(bool $mmsFallBackToSMS): self
    {
        $obj = clone $this;
        $obj->mmsFallBackToSMS = $mmsFallBackToSMS;

        return $obj;
    }

    /**
     * enables automated resizing of MMS media.
     */
    public function withMmsTranscoding(bool $mmsTranscoding): self
    {
        $obj = clone $this;
        $obj->mmsTranscoding = $mmsTranscoding;

        return $obj;
    }

    /**
     * Number Pool allows you to send messages from a pool of numbers of different types, assigning
     * weights to each type. The pool consists of all the long code and toll free numbers
     * assigned to the messaging profile.
     *
     * To disable this feature, set the object field to `null`.
     */
    public function withNumberPoolSettings(
        ?NumberPoolSettings $numberPoolSettings
    ): self {
        $obj = clone $this;
        $obj->numberPoolSettings = $numberPoolSettings;

        return $obj;
    }

    /**
     * The URL shortener feature allows automatic replacement of URLs that were generated using
     * a public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,
     * is.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced with
     * with links generated by Telnyx. The use of custom links can improve branding and message
     * deliverability.
     *
     * To disable this feature, set the object field to `null`.
     */
    public function withURLShortenerSettings(
        ?URLShortenerSettings $urlShortenerSettings
    ): self {
        $obj = clone $this;
        $obj->urlShortenerSettings = $urlShortenerSettings;

        return $obj;
    }

    /**
     * Determines which webhook format will be used, Telnyx API v1, v2, or a legacy 2010-04-01 format.
     *
     * @param WebhookAPIVersion|value-of<WebhookAPIVersion> $webhookAPIVersion
     */
    public function withWebhookAPIVersion(
        WebhookAPIVersion|string $webhookAPIVersion
    ): self {
        $obj = clone $this;
        $obj['webhookAPIVersion'] = $webhookAPIVersion;

        return $obj;
    }

    /**
     * The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.
     */
    public function withWebhookFailoverURL(?string $webhookFailoverURL): self
    {
        $obj = clone $this;
        $obj->webhookFailoverURL = $webhookFailoverURL;

        return $obj;
    }

    /**
     * The URL where webhooks related to this messaging profile will be sent.
     */
    public function withWebhookURL(?string $webhookURL): self
    {
        $obj = clone $this;
        $obj->webhookURL = $webhookURL;

        return $obj;
    }
}
