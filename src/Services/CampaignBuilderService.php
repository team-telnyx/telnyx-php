<?php

declare(strict_types=1);

namespace Telnyx\Services;

use Telnyx\Campaign\TelnyxCampaignCsp;
use Telnyx\CampaignBuilder\CampaignBuilderCreateParams;
use Telnyx\CampaignBuilder\CampaignBuilderNewResponse;
use Telnyx\Client;
use Telnyx\RequestOptions;
use Telnyx\ServiceContracts\CampaignBuilderContract;
use Telnyx\Services\CampaignBuilder\BrandService;

use const Telnyx\Core\OMIT as omit;

final class CampaignBuilderService implements CampaignBuilderContract
{
    /**
     * @@api
     */
    public BrandService $brand;

    /**
     * @internal
     */
    public function __construct(private Client $client)
    {
        $this->brand = new BrandService($this->client);
    }

    /**
     * @api
     *
     * Before creating a campaign, use the [Qualify By Usecase endpoint](https://developers.telnyx.com/api/messaging/10dlc/get-usecase-qualification) to ensure that the brand you want to assign a new campaign to is qualified for the desired use case of that campaign. **Please note:** After campaign creation, you'll only be able to edit the campaign's sample messages. Creating a campaign will entail an upfront, non-refundable three month's cost that will depend on the campaign's use case ([see 10DLC Costs section for details](https://developers.telnyx.com/docs/messaging/10dlc/concepts#10dlc-costs)).
     *
     * @param string $brandID alphanumeric identifier of the brand associated with this campaign
     * @param string $description summary description of this campaign
     * @param string $usecase Campaign usecase. Must be of defined valid types. Use `/registry/enum/usecase` operation to retrieve usecases available for given brand.
     * @param bool $ageGated age gated message content in campaign
     * @param bool $autoRenewal Campaign subscription auto-renewal option. If set to true, then campaign will automatically renewal at end of billing cycle.
     * @param bool $directLending Direct lending or loan arrangement
     * @param bool $embeddedLink Does message generated by the campaign include URL link in SMS?
     * @param string $embeddedLinkSample sample of an embedded link that will be sent to subscribers
     * @param bool $embeddedPhone Does message generated by the campaign include phone number in SMS?
     * @param string $helpKeywords Subscriber help keywords. Multiple keywords are comma separated without space.
     * @param string $helpMessage help message of the campaign
     * @param string $messageFlow message flow description
     * @param list<int> $mnoIDs Submit campaign to given list of MNOs by MNO's network ID. Default is all MNOs if no value provided.
     * @param bool $numberPool Does campaign utilize pool of phone numbers?
     * @param string $optinKeywords Subscriber opt-in keywords. Multiple keywords are comma separated without space.
     * @param string $optinMessage subscriber opt-in message
     * @param string $optoutKeywords Subscriber opt-out keywords. Multiple keywords are comma separated without space.
     * @param string $optoutMessage subscriber opt-out message
     * @param string $privacyPolicyLink link to the campaign's privacy policy
     * @param string $referenceID Caller supplied campaign reference ID. If supplied, the value must be unique across all submitted campaigns. Can be used to prevent duplicate campaign registrations.
     * @param string $resellerID alphanumeric identifier of the reseller that you want to associate with this campaign
     * @param string $sample1 Message sample. Some campaign tiers require 1 or more message samples.
     * @param string $sample2 Message sample. Some campaign tiers require 2 or more message samples.
     * @param string $sample3 Message sample. Some campaign tiers require 3 or more message samples.
     * @param string $sample4 Message sample. Some campaign tiers require 4 or more message samples.
     * @param string $sample5 Message sample. Some campaign tiers require 5 or more message samples.
     * @param bool $subscriberHelp Does campaign responds to help keyword(s)?
     * @param bool $subscriberOptin Does campaign require subscriber to opt-in before SMS is sent to subscriber?
     * @param bool $subscriberOptout Does campaign support subscriber opt-out keyword(s)?
     * @param list<string> $subUsecases Campaign sub-usecases. Must be of defined valid sub-usecase types. Use `/registry/enum/usecase` operation to retrieve list of valid sub-usecases
     * @param list<string> $tag tags to be set on the Campaign
     * @param bool $termsAndConditions Is terms and conditions accepted?
     * @param string $termsAndConditionsLink link to the campaign's terms and conditions
     * @param string $webhookFailoverURL failover webhook to which campaign status updates are sent
     * @param string $webhookURL webhook to which campaign status updates are sent
     *
     * @return mixed|TelnyxCampaignCsp
     */
    public function create(
        $brandID,
        $description,
        $usecase,
        $ageGated = omit,
        $autoRenewal = omit,
        $directLending = omit,
        $embeddedLink = omit,
        $embeddedLinkSample = omit,
        $embeddedPhone = omit,
        $helpKeywords = omit,
        $helpMessage = omit,
        $messageFlow = omit,
        $mnoIDs = omit,
        $numberPool = omit,
        $optinKeywords = omit,
        $optinMessage = omit,
        $optoutKeywords = omit,
        $optoutMessage = omit,
        $privacyPolicyLink = omit,
        $referenceID = omit,
        $resellerID = omit,
        $sample1 = omit,
        $sample2 = omit,
        $sample3 = omit,
        $sample4 = omit,
        $sample5 = omit,
        $subscriberHelp = omit,
        $subscriberOptin = omit,
        $subscriberOptout = omit,
        $subUsecases = omit,
        $tag = omit,
        $termsAndConditions = omit,
        $termsAndConditionsLink = omit,
        $webhookFailoverURL = omit,
        $webhookURL = omit,
        ?RequestOptions $requestOptions = null,
    ): mixed {
        [$parsed, $options] = CampaignBuilderCreateParams::parseRequest(
            [
                'brandID' => $brandID,
                'description' => $description,
                'usecase' => $usecase,
                'ageGated' => $ageGated,
                'autoRenewal' => $autoRenewal,
                'directLending' => $directLending,
                'embeddedLink' => $embeddedLink,
                'embeddedLinkSample' => $embeddedLinkSample,
                'embeddedPhone' => $embeddedPhone,
                'helpKeywords' => $helpKeywords,
                'helpMessage' => $helpMessage,
                'messageFlow' => $messageFlow,
                'mnoIDs' => $mnoIDs,
                'numberPool' => $numberPool,
                'optinKeywords' => $optinKeywords,
                'optinMessage' => $optinMessage,
                'optoutKeywords' => $optoutKeywords,
                'optoutMessage' => $optoutMessage,
                'privacyPolicyLink' => $privacyPolicyLink,
                'referenceID' => $referenceID,
                'resellerID' => $resellerID,
                'sample1' => $sample1,
                'sample2' => $sample2,
                'sample3' => $sample3,
                'sample4' => $sample4,
                'sample5' => $sample5,
                'subscriberHelp' => $subscriberHelp,
                'subscriberOptin' => $subscriberOptin,
                'subscriberOptout' => $subscriberOptout,
                'subUsecases' => $subUsecases,
                'tag' => $tag,
                'termsAndConditions' => $termsAndConditions,
                'termsAndConditionsLink' => $termsAndConditionsLink,
                'webhookFailoverURL' => $webhookFailoverURL,
                'webhookURL' => $webhookURL,
            ],
            $requestOptions,
        );

        // @phpstan-ignore-next-line;
        return $this->client->request(
            method: 'post',
            path: 'campaignBuilder',
            body: (object) $parsed,
            options: $options,
            convert: CampaignBuilderNewResponse::class,
        );
    }
}
